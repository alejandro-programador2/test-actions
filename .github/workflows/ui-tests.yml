# Workflow to UI test for accessibility, composition, interaction, visual

name: 'UI Tests'

on: push

jobs:
  # Install and cache npm dependencies
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Cache npm dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-npm-v1-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-v1
      - name: Install dependencies if cache invalid
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
  # Run interaction and accessibility tests
  interaction-and-accessibility:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Restore npm dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-npm-v1-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-v1
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build Storybook
        run: npm run build-storybook --quiet --no-dll
      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on tcp:6006 && npm run test-storybook"
      - name: Setup tmate session
        if: success() || failure()
        uses: mxschmitt/action-tmate@v3
  # # Run visual and composition tests with Chromatic
  # visual-and-composition:
  #   runs-on: ubuntu-latest
  #   needs: install-cache
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0 # Required to retrieve git history
  #     - name: Restore npm dependencies
  #       uses: actions/cache@v2
  #       id: npm-cache
  #       with:
  #         path: |
  #           node_modules
  #         key: ${{ runner.os }}-npm-v1-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-npm-v1
  #     - name: Publish to Chromatic
  #       uses: chromaui/action@v1
  #       with:
  #         # Grab this from the Chromatic manage page
  #         projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}